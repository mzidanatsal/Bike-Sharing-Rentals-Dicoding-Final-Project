# -*- coding: utf-8 -*-
"""FINAL PROJECT BIKE RENTAL ZIDAN

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Zruq1-iCmUTnlnPqbXKutmIZH3irUmNk

# **Proyek Analisis Data: Bike Sharing Dataset**
- **Nama:** Muhammad Zidan Atsal
- **Email:** mzatsal19@gmail.com
- **ID Dicoding:** mzidanatsal11

## **Business Questions**


1.   Does the weather play a role in the number of bicycle users?
2.   What are the conditions when bicycles are used on working days, holidays, and weekdays?
3. What is the trend of bicycle usage in a year, is 2011 or 2012 the superior year?
4. How do variables such as temp and atemp and humidity affect the total number of bicycle users (both Casual and Registered)?
5. Is there an effect of seasonality on bicycle rentals based on Casual and Registered customers?

## **Import All the Packages/Library**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from datetime import datetime

from google.colab import drive
drive.mount('/content/drive')

"""## **Data Wrangling**

### **Gathering Data**

At this stage we will collect the data that we have collected. Because I chose the Bike Sharing Dataset, I imported the day.csv and hr.csv files

#### **Load Day Table**
"""

day_df = pd.read_csv('/content/drive/MyDrive/DICODING/Bike-sharing-dataset/day.csv')
day_df.head()

"""#### **Load Hour Table**"""

hr_df = pd.read_csv('/content/drive/MyDrive/DICODING/Bike-sharing-dataset/hour.csv')
hr_df.head()

"""### **Assessing Data**

#### Assesing day_df

1. Checking the day_df data type
"""

day_df.info()

"""We can see that there is 1 data type based on the column that does not match. The data that needs to be corrected is: dteday --> datetime

2. Checking missing values
"""

day_df.isna().sum()

"""We can conclude that the day_df table has no missing values and the data is safe to use.

3. Check for duplicated data
"""

print("Amount of duplication data : ", day_df.duplicated().sum())

"""In the day_df table there is no duplicate data, meaning that all data is unique.

4. Checking for anomalies in the statistical values
"""

day_df.describe()

"""We can see that there is nothing anomalous about the statistical values.

#### Assesing hr_df

1. Checking the day_df data type
"""

hr_df.info()

"""We can see that there is 1 data type based on the column that does not match. The data that needs to be corrected is: dteday --> datetime

2. Checking missing values
"""

hr_df.isna().sum()

"""We can conclude that the hr_df table has no missing values and the data is safe to use.

3. Check for duplicated data
"""

print("Amount of duplication data : ", hr_df.duplicated().sum())

"""In the hr_df table there is no duplicate data, meaning that all data is unique.

4. Checking for anomalies in the statistical values
"""

hr_df.describe()

"""We can see that there is nothing anomalous about the statistical values.

## **Cleaning Data**

1. Delete unnecessary tables

Before we go to the next steps, we will first delete the hr table. The reason for the deletion is because we are not relevant to the business question we have set, and also actually the hr and day tables are only different in the hr column.
"""

del hr_df

"""2. Removing some columns that will not be used

Based on the existing business question, the columns that will be dropped are:

* Instant: Because this record index does not provide any additional useful information.
* Windspeed: There is no business question related to the effect of wind speed on the number of bike renters.
"""

drop_col = ['instant', 'windspeed']

for i in day_df.columns:
  if i in drop_col:
    day_df.drop(labels=i, axis=1, inplace=True)

day_df.head()

"""3. Changing some details about the columns

Because the names of the columns above are not appropriate and cannot be understood, we will change them. Also, with the categorical form, so some of the ones that were previously numbers will be changed. Lastly, if there was an inappropriate data type before, we will change it too.
"""

# Change name of column
day_df.rename(columns={
    'dteday': 'dateday',
    'yr': 'year',
    'mnth': 'month',
    'weathersit': 'weather_cond',
    'cnt': 'count'
}, inplace=True)

day_df.head()

# Change the number into description
day_df['month'] = day_df['month'].map({
    1: 'Jan', 2: 'Feb', 3: 'Mar', 4: 'Apr', 5: 'May', 6: 'Jun',
    7: 'Jul', 8: 'Aug', 9: 'Sep', 10: 'Oct', 11: 'Nov', 12: 'Dec'
})
day_df['season'] = day_df['season'].map({
    1: 'Spring', 2: 'Summer', 3: 'Fall', 4: 'Winter'
})
day_df['weekday'] = day_df['weekday'].map({
    0: 'Sun', 1: 'Mon', 2: 'Tue', 3: 'Wed', 4: 'Thu', 5: 'Fri', 6: 'Sat'
})
day_df['weather_cond'] = day_df['weather_cond'].map({
    1: 'Clear/Partly Cloudy',
    2: 'Misty/Cloudy',
    3: 'Light Snow/Rain',
    4: 'Severe Weather'
})

# Change data type into date time
day_df['dateday'] = pd.to_datetime(day_df.dateday)

# Mengubaha tipe data ke categorical
day_df['season'] = day_df.season.astype('category')
day_df['year'] = day_df.year.astype('category')
day_df['month'] = day_df.month.astype('category')
day_df['holiday'] = day_df.holiday.astype('category')
day_df['weekday'] = day_df.weekday.astype('category')
day_df['workingday'] = day_df.workingday.astype('category')
day_df['weather_cond'] = day_df.weather_cond.astype('category')

day_df.head()

day_df.info()

"""## **Exploratory Data Analysis (EDA)**

### Explore day_df

Group bike renters (both casual and registered) by month
"""

day_df.groupby(by='month').agg({
    'count': ['max', 'min', 'mean', 'sum']
})

"""Based on the results above, it can be concluded that the month that has the largest average and the largest number is June. While the smallest average and smallest number is January.

2. Categorize bicycle renters (both casual and registered) based on weather conditions.
"""

day_df.groupby(by='weather_cond').agg({
    'count': ['max', 'min', 'mean', 'sum']
})

"""Based on the results above, it can be concluded that bicycle renters tend to rent during sunny or cloudy weather. Very few when it is snowing and none when the weather is very bad.

3. Grouping bike renters (both casual and registered) by holiday
"""

day_df.groupby(by='holiday').agg({
    'count': ['max', 'min', 'mean', 'sum']
})

"""Based on the results above, it can be concluded that bicycle renters prefer to rent bicycles when it is not a holiday, but during weekdays.

4. Comparing bicycle renters on weekdays and weekends
"""

day_df.groupby(by='weekday').agg({
    'count':['max','min','mean']
})

"""Based on the results above, the order of the average number of tenants from largest to smallest is: Friday (Fri), Thursday (Thu), Saturday (Sat), Wednesday (Wed), Tuesday (Tue), Monday (Mon), and Sunday (Sun).

5. Categorize bike renters (both casual and registered) by workday
"""

day_df.groupby(by='workingday').agg({
    'count': ['max', 'min', 'mean']
})

"""Based on the results above, the largest number of bike rentals falls on working days compared to non-working days. However, we can also see that the results are quite different although not by much.

6. Categorize bike renters (both casual and registered) by season
"""

day_df.groupby(by='season').agg({
    'casual': 'mean',
    'registered': 'mean',
    'count': ['max', 'min', 'mean']
})

"""Based on the results of the analysis above, both Casual and Registered bicycle renters prefer the Fall season, as can be seen from the averages. While the least is in the spring (Spring) with the smallest average.

7. Classify temp, hum, and humidity by season
"""

day_df.groupby(by='season').agg({
    'temp': ['max', 'min', 'mean'],
    'atemp': ['max', 'min', 'mean'],
    'hum': ['max', 'min', 'mean']
})

"""8. Relationship between casual, registered, and count tenants"""

fig, ax = plt.subplots(figsize=(10,6))
correlation_matrix = day_df.corr(numeric_only=True)
mask = np.triu(np.ones_like(correlation_matrix, dtype=bool))

sns.heatmap(
    correlation_matrix,
    annot=True,
    mask=mask,
    cmap="coolwarm",
    center=0,
    fmt=".2f")
plt.title("Correlation Heatmap")
plt.show()

"""Based on the results of the above analysis, the following statement is obtained:

* atemp and temp are highly correlated (0.99).
* hum has a weak correlation with temp and atemp (0.13 and 0.14).
* casual is moderately correlated with temp and atemp (0.54), and slightly negative with hum (-0.08).
* registered has the same pattern as casual, and is moderately correlated with casual (0.40).
* count is strongly correlated with temp, atemp, casual, and registered (0.63, 0.63, 0.67, and 0.95), and slightly negative with hum (-0.10).
"""



"""## **Visualization & Explanatory Analysis**

#### **Question 1: Does the weather play a role in the number of bicycle users?**
"""

plt.figure(figsize=(10,6))
sns.barplot(
    x='weather_cond',
    y='count',
    data=day_df)

plt.title('Jumlah Pengguna Sepeda berdasarkan Kondisi Cuaca')
plt.xlabel('Kondisi Cuaca')
plt.ylabel('Jumlah Pengguna Sepeda')
plt.show()

"""Based on the visualization of the data using boxplots, it can be concluded that there is a clear relationship between weather conditions and bicycle renters. Weather conditions when it is sunny / half cloudy are the most popular conditions, followed by foggy / cloudy weather, and finally when the weather is a little snowy / rainy it is the least popular.

#### **Question 2: What are the conditions when bicycles are used on working days, holidays, and weekdays?**
"""

fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(15,10))

# Based on workingday
sns.barplot(
    x='workingday',
    y='count',
    data=day_df,
    ax=axes[0])
axes[0].set_title('Jumlah Pengguna Sepeda berdasarkan Hari Kerja')
axes[0].set_xlabel('Hari Kerja')
axes[0].set_ylabel('Jumlah Pengguna Sepeda')

# Based on holiday
sns.barplot(
  x='holiday',
  y='count',
  data=day_df,
  ax=axes[1])
axes[1].set_title('Jumlah Pengguna Sepeda berdasarkan Hari Libur')
axes[1].set_xlabel('Hari Libur')
axes[1].set_ylabel('Jumlah Pengguna Sepeda')

# Based on weekday
sns.barplot(
  x='weekday',
  y='count',
  data=day_df,
  ax=axes[2])
axes[2].set_title('Jumlah Pengguna Sepeda berdasarkan Hari dalam Seminggu')
axes[2].set_xlabel('Hari dalam Seminggu')
axes[2].set_ylabel('Jumlah Pengguna Sepeda')

plt.tight_layout()
plt.show()

"""Based on the data visualization above using barplots, the following statement is obtained:

* The number of bicycle renters is more on weekdays (i.e. Monday - Friday) than weekends (i.e. Saturday and Sunday). 0 indicates weekend and 1 indicates weekday.
* The number of bicycle renters is much higher on weekdays (non-holidays) than on holidays (national holidays).
* Friday is the day with the most bicycle renters, and Sunday is the day with the least number of bicycle renters.

#### **Question 3: What is the trend of bicycle usage in a year, is 2011 or 2012 the superior year?**
"""

day_df['month'] = pd.Categorical(day_df['month'], categories=
    ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],
    ordered=True)

monthly_counts = day_df.groupby(by=["month","year"]).agg({
    "count": "sum"
}).reset_index()

sns.lineplot(
    data=monthly_counts,
    x="month",
    y="count",
    hue="year",
    palette="rocket",
    marker="o")

plt.title("Jumlah total sepeda yang disewakan berdasarkan Bulan dan tahun")
plt.xlabel(None)
plt.ylabel(None)
plt.legend(title="Tahun", loc="upper right")
plt.tight_layout()
plt.show()

"""Based on the visualization above using lineplot, it can be concluded that the year 2012 (represented by the number 1) clearly won the upper hand from January to December. The peak of bike rentals in 2012 occurred in September, while the quietest month occurred in January. Whereas in 2011 peak bike rentals occurred in June and had the least rentals in January.

#### **Question 4: How do variables such as temp and atemp and humidity affect the total number of bicycle users (both Casual and Registered)?**
"""

plt.figure(figsize=(14, 6))

# Scatter plot for 'temp' vs 'count'
plt.subplot(1, 3, 1)
sns.scatterplot(
    x='temp',
    y='count',
    data=day_df,
    alpha=0.5
)
plt.title('Temperature vs Count')

# Scatter plot for 'atemp' vs 'count'
plt.subplot(1, 3, 2)
sns.scatterplot(
    x='atemp',
    y='count',
    data=day_df,
    alpha=0.5
)
plt.title('Feels Like Temperature vs Count')

# Scatter plot for 'hum' vs 'count'
plt.subplot(1, 3, 3)
sns.scatterplot(
    x='hum',
    y='count',
    data=day_df,
    alpha=0.5
)
plt.title('Humidity vs Count')

"""Based on the results of the above analysis using the scatter plot, we can draw the following statements:

* The relationship between temp and count turns out to show a positive correlation between the two variables.
* The relationship between atemp and count also shows a positive correlation between the two variables.
* The relationship between hum and count turns out to show a slightly negative correlation, but it is not too significant because the lean to the left is not too noticeable.

In conclusion, if the temperature (temp and atemp) increases, then bicycle users also tend to increase. And the influence of humidity seems to be very small here, although it tends to reduce the number of bicycle users.

#### **Question 5: Is there an effect of seasonality on bicycle rentals based on Casual and Registered customers?**
"""

# Classify data by season and calculate the number of registered and unregistered uses
seasonal_usage = day_df.groupby('season')[['registered', 'casual']].sum().reset_index()

plt.figure(figsize=(10, 6))

plt.bar(
    seasonal_usage['season'],
    seasonal_usage['registered'],
    label='Registered',
    color='tab:blue'
)

plt.bar(
    seasonal_usage['season'],
    seasonal_usage['casual'],
    label='Casual',
    color='tab:orange'
)

plt.xlabel(None)
plt.ylabel(None)
plt.title('Jumlah penyewaan sepeda berdasarkan musim')
plt.legend()
plt.show()

"""Based on the results of the above analysis using barplots, it can be concluded that across all seasons the most enjoyable season for cyclists (Casual and Registered) is Fall, followed by Summer, Winter, and ending with Spring.

## **Conclusion**

**Conclusion for Question 1:**  
It is clear that there is a relationship between the two. Bicycle renters prefer weather that is Clear/Partly Cloudy with Q3 above 6000, Q1 below 4000, and a median close to 5000. The second most preferred condition is when the weather is Foggy/Cloudy, with Q3 above 5000, Q1 below 3000, and a median above 4000. Lastly, users tend to dislike weather that is Slightly Snowy/Rainy, with Q3 above 2000, Q1 below 1000, and a median above 1000. There is no data for severe storms, as it is generally not feasible to cycle under such weather conditions.

**Conclusion for Question 2:**  
The conditions shown in the visualization are divided into three parts. For the number of bike users based on working days, working days slightly outperform non-working days, though the difference is not too significant. However, there is still a clear distinction, with both having over 4000 users. Based on holidays, non-holidays dominate with a more significant difference compared to holidays. This may indicate that users prefer to rent bikes on regular days. Lastly, based on weekdays, Friday ranks first with a mean of 4690.29, while Sunday is last with a mean of 4228.83.

**Conclusion for Question 3:**  
In this visualization, we can observe that in both 2011 and 2012, there were differences in peak and bottom months. The peak in 2011 was in June, with the lowest point in January. In 2012, the peak was in September, while the lowest point was still in January. From both visualizations, we can see that the total number of bikes rented in 2012 was higher overall than in 2011.

**Conclusion for Question 4:**  
From the three visualizations shown, it can be concluded that temp and atemp have a positive correlation with the count, meaning that as temperature (temp and atemp) increases, the number of bike users also tends to rise. This is in contrast with humidity, which has a negative correlation with the count, though it is very minimal (not very significant). However, it still slightly decreases the number of bike users as humidity increases.

**Conclusion for Question 5:**  
In the final visualization, the results are quite surprising, as winter did not rank last. Instead, spring came in last. This could be due to various factors such as weather conditions, air temperature, working days, holidays, etc. Fall ranked first, achieving over 800,000 bike rentals.
"""



"""**Insight:**
- xxx
- xxx

## Analisis Lanjutan (Opsional)
"""



"""## Conclusion

- Conclution pertanyaan 1
- Conclution pertanyaan 2
"""
